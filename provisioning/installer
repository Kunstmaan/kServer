#!/bin/bash

export DEBIAN_FRONTEND=noninteractive
export INSTALLBASE=$1
export MYSQLROOTPASSWD=$2
export NEWRELICKEY=$3
export PROXY=$4

checkInstalled(){
    LIST=""
    for PACKAGE in $@; do
        dpkg -l ${PACKAGE}  | grep '^i' > /dev/null
        result=$?
        if [[ $result != 0 ]] ; then
            LIST="$LIST $PACKAGE"
        fi
    done
    yes | apt-get -y -qq install $LIST
}

checkKeyAdded(){
    apt-key list | grep ${1} > /dev/null
    result=$?
    if [[ $result != 0 ]]; then
        apt-key adv --keyserver ${2} --recv-keys ${1}
    fi
}

checkRepoInstalled(){
    mkdir -p /etc/apt/sources.list.d/
    grep -h ^deb /etc/apt/sources.list /etc/apt/sources.list.d/* | grep -v ^deb-src | grep ${1} > /dev/null
    result=$?
    if [[ $result != 0 ]]; then
        if [[ "$3" == "true" ]]; then
            echo "$2" > /etc/apt/sources.list.d/$1.list
        else
            add-apt-repository -y "${2}"
        fi
    fi
}

echo "##### Making sure everything is up to date"

sed 's@us.archive.ubuntu.com@be.archive.ubuntu.com@' -i /etc/apt/sources.list
if [[ $PROXY ]]; then
    echo 'Acquire::http { Proxy "$PROXY"; };' > /etc/apt/apt.conf.d/01proxy
fi

apt-get -qq update
yes | apt-get -y -qq install python-software-properties

#checkInstalled python-software-properties
checkRepoInstalled 'php5' 'ppa:ondrej/php5'
checkRepoInstalled 'glances-stable' 'ppa:arnaud-hartmann/glances-stable'
checkKeyAdded '548C16BF' 'hkp://subkeys.pgp.net'
checkRepoInstalled 'newrelic' 'deb http://apt.newrelic.com/debian/ newrelic non-free' true
checkKeyAdded 'CD2EFD2A' 'hkp://keys.gnupg.net'
checkRepoInstalled 'percona' 'deb http://repo.percona.com/apt precise main' true

apt-get -qq update
yes | apt-get -qq -y -o 'DPkg::Options::=--force-confold' dist-upgrade
apt-get -qq autoclean
apt-get -qq clean

echo "##### Getting compilers"

checkInstalled build-essential

echo "##### Setting up ACL and other fstab performance fixes"

checkInstalled acl

cat /etc/fstab | grep acl > /dev/null
result=$?
if [[ $result != 0 ]]; then
    cat /etc/fstab | grep -v precise64-root > /etc/fstab.tmp
    cat /etc/fstab | grep precise64-root | sed "s/remount-ro/remount-ro,acl,noatime,nodiratime/" >> /etc/fstab.tmp
    mv /etc/fstab.tmp /etc/fstab
fi
cat /etc/fstab | grep tmpfs > /dev/null
result=$?
if [[ $result != 0 ]]; then
    echo "tmpfs /tmp tmpfs defaults,nosuid,noatime,nodiratime 0 0" >> /etc/fstab
fi

mount -a
mount -o remount /

echo "##### Configuring the scheduler..."

if [ -f /etc/init.d/ondemand ]; then
    sed -i 's/\([^/]\)ondemand/\1performance/g' /etc/init.d/ondemand
    /etc/init.d/ondemand start
fi

echo "##### Add some services and settings based on the scalingphp ebook"

checkInstalled nscd
service nscd status | grep running > /dev/null
result=$?
if [[ $result == 1 ]]; then
    service nscd start
fi

cat $INSTALLBASE/provisioning/etc/sysctl.d/50-tuning.conf > /etc/sysctl.d/50-tuning.conf
sysctl -p

ulimit -n 100000
cat $INSTALLBASE/provisioning/etc/security/limits.conf > /etc/security/limits.conf

echo noop > /sys/block/sda/queue/scheduler
## TODO add this to rc.local

echo "##### Installing apache"

checkInstalled apache2 apache2-mpm-worker apache2-threaded-dev libapache2-mod-rpaf libapache2-mod-fastcgi

if [ ! -L /etc/apache2/mods-enabled/rewrite.load ]; then
    a2enmod rewrite
fi
if [ ! -L /etc/apache2/mods-enabled/ssl.load ]; then
    a2enmod ssl
fi
if [ -L /etc/apache2/sites-enabled/000-default ]; then
    a2dissite 000-default
fi

echo "##### Installing mysql"

checkInstalled percona-server-server-5.5 percona-server-client-5.5 percona-toolkit

mysql -u root -e ";" 2> /dev/null
result=$?
if [[ $result == 0 ]]; then
    mysql -uroot -e "UPDATE mysql.user SET Password = PASSWORD('$MYSQLROOTPASSWD') WHERE User = 'root'; DELETE FROM mysql.user WHERE User=''; DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1'); DROP DATABASE IF EXISTS test; FLUSH PRIVILEGES;"
    cp $INSTALLBASE/provisioning/etc/mysql/tuning.cnf /etc/mysql/conf.d/
fi



exit 1

echo "##### Installing PHP"
yes | apt-get -y -q install sysv-rc-conf php5-fpm php5-mysqlnd php5-mcrypt php5-cli php5-gd php5-memcached php5-curl php5-intl php5-dev php-pear build-essential libmagick++-dev
yes | pecl install imagick-beta
yes | pecl install APC-beta
echo "extension=imagick.so" > /etc/php5/conf.d/50-imagick.ini
cat $INSTALLBASE/provisioning/etc/php5/conf.d/50-apc.ini > /etc/php5/conf.d/50-apc.ini
cat $INSTALLBASE/provisioning/etc/php5/conf.d/99-kunstmaan.ini > /etc/php5/conf.d/99-kunstmaan.ini

echo "##### Setting up FPM"

a2enmod actions
a2enmod fastcgi
cp $INSTALLBASE/provisioning/etc/apache/fastcgi.conf /etc/apache2/mods-available/fastcgi.conf
sysv-rc-conf --level 2345 php5-fpm on


echo "##### Configuring newrelic"

yes | apt-get -y -q install newrelic-sysmond newrelic-php5
nrsysmond-config --set license_key=$NEWRELICKEY
/etc/init.d/newrelic-sysmond start
export NR_INSTALL_SILENT=true
export NR_INSTALL_KEY=$NEWRELICKEY
newrelic-install install
/etc/init.d/newrelic-daemon restart

echo "##### Configuring GIT"

yes | apt-get -y -q install git
mkdir -p ~/.ssh/
ssh-keyscan -H github.com >> ~/.ssh/known_hosts
ssh-add -L

echo "Defaults        env_keep+=SSH_AUTH_SOCK" > /etc/sudoers.d/env
chmod 440 /etc/sudoers.d/env

echo "##### Setting up Varnish"
yes | apt-get -y -q install varnish
cp $INSTALLBASE/provisioning/etc/varnish/default.vcl /etc/varnish/default.vcl

echo "##### Generating locales"
locale-gen nl_BE
locale-gen fr_BE
locale-gen en_GB
locale-gen es_ES
locale-gen nl_BE.utf8
locale-gen fr_BE.utf8
locale-gen en_GB.utf8
locale-gen es_ES.utf8

echo "##### Create hosting folders"

mkdir -p /var/www

echo "##### Adding some custom development settings"
cd /tmp/
git clone https://github.com/roderik/dotfiles.git
cd /tmp/dotfiles
rsync --exclude ".git/" --exclude ".DS_Store" --exclude "bootstrap.sh" --exclude "Sublime Text 2" --exclude "README.md" -av . /root/
rsync --exclude ".git/" --exclude ".DS_Store" --exclude "bootstrap.sh" --exclude "Sublime Text 2" --exclude "README.md" -av . /home/vagrant

echo "##### Installing various useful packages"

yes | apt-get -y -q install ntp optipng jpegoptim curl glances htop
gem install kstrano
curl -s https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer
chmod a+x /usr/local/bin/composer

echo "##### Setting up Postfix"

yes | apt-get -y -q install postfix
cat /etc/postfix/main.cf | sed -e "s/`hostname`/`hostname`.kunstmaan.be/g" > /etc/postfix/main.cf
echo "`hostname`.kunstmaan.be" > /etc/mailname

echo "##### Restarting services"

service apache2 restart
service php5-fpm restart
service mysql restart
service postfix restart

