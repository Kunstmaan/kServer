<?php
namespace Kunstmaan\kServer\Tests;

use Symfony\Component\Console\Output\Output;

use Symfony\Component\Console\Output\NullOutput;

use Symfony\Component\Console\Input\StringInput;
use Kunstmaan\MediaBundle\Entity\Folder;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-28 at 14:19:20.
 */
class CreateTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Folder
     */
    protected $app;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $app = new \Cilex\Application('kServer', '1.0');

        $output = new \Symfony\Component\Console\Output\ConsoleOutput();

        $app->register(new \Cilex\Provider\ConfigServiceProvider(), array('config.path' => __DIR__."/../../../../config/config.yml"));
        $app->register(new \Kunstmaan\kServer\Provider\FileSystemProvider());
        $app->register(new \Kunstmaan\kServer\Provider\ProcessProvider());
        $app->register(new \Kunstmaan\kServer\Provider\SkeletonProvider($output));
        $app->register(new \Kunstmaan\kServer\Provider\ProjectConfigProvider());
        $app->register(new \Kunstmaan\kServer\Provider\PermissionsProvider());
        $app->register(new \Kunstmaan\kServer\Provider\DialogProvider($output));
        $app->register(new \Cilex\Provider\TwigServiceProvider(), array(
            'twig.path' => '/',
        ));


        $app->command(new \Kunstmaan\kServer\Command\NewProjectCommand($output));
        $app->command(new \Kunstmaan\kServer\Command\SetPermissionsCommand($output));
        $app->command(new \Kunstmaan\kServer\Command\MaintenanceCommand($output));
        $app->command(new \Kunstmaan\kServer\Command\BackupCommand($output));
        $app->command(new \Kunstmaan\kServer\Command\RemoveProjectCommand($output));
        $app->command(new \Kunstmaan\kServer\Command\ApplySkeletonCommand($output));

        $this->app = $app;
    }

    /**
     * testCreateAndRemove
     */
    public function testCreateAndRemove()
    {
        $output = new TestOutput();
        $this->app["console"]->setAutoExit(false);
        $this->app["console"]->run(new StringInput('new kservertestproject"'), $output);
        $this->app["console"]->run(new StringInput('apply kservertestproject apache"'), $output);
        $this->app["console"]->run(new StringInput('maintenance"'), $output);
        $this->app["console"]->run(new StringInput('backup"'), $output);
        $this->app["console"]->run(new StringInput('remove kservertestproject"'), $output);
    }

}

class TestOutput extends Output
{
    public $output = '';

    public function clear()
    {
        $this->output = '';
    }

    protected function doWrite($message, $newline)
    {
        echo $message.($newline ? "\n" : '');
        flush();
        ob_flush();

        $this->output .= $message.($newline ? "\n" : '');
    }
}

